"""
Модуль с диагнозами из приказа МЗ N 168н от 15 марта 2022

Приказ вступает в силу с 1 сентября 2022 г. и действует до 1 сентября 2028 г.
http://pravo.gov.ru/proxy/ips/?docbody=&link_id=0&nd=603001835&bpa=cd00000&bpas=cd00000&intelsearch=%CF%D0%C8%CA%C0%C7++%EE%F2+15+%EC%E0%F0%F2%E0+2022+%E3%EE%E4%E0+N+168%ED++&firstDoc=1
"""

from typing import Set, Union

# Приложение 1: Перечень хронических заболеваний, функциональных расстройств,
# иных состояний, при наличии которых устанавливается диспансерное наблюдение
# за взрослым населением врачом-терапевтом
Appendix1 = (
    {
        'I10-I15': (
            'I10', 
            {'I11': ('I11.0', 'I11.9')},
            {'I12': ('I12.0', 'I12.9')},
            {'I13': ('I13.0', 'I13.1', 'I13.2', 'I13.9')},
            {'I15': ('I15.0', 'I15.1', 'I15.2', 'I15.8', 'I15.9')},
        )
    },
    {
        'I20-I25': (
            {'I20': ('I20.0', 'I20.1', 'I20.8', 'I20.9')},
            {'I21': ('I21.0', 'I21.1', 'I21.2', 'I21.3', 'I21.4', 'I21.9')},
            {'I22': ('I22.0', 'I22.1', 'I22.8', 'I22.9')},
            {'I23': ('I23.0', 'I23.1', 'I23.2', 'I23.3', 'I23.4', 'I23.5', 'I23.6', 'I23.8')},
            {'I24': ('I24.0', 'I24.1', 'I24.8', 'I24.9')},
            {'I25': ('I25.0', 'I25.1', 'I25.2', 'I25.3', 'I25.4', 'I25.5', 'I25.6', 'I25.8', 'I25.9')},
        )
    },
    'Z95.1',
    'Z95.5',
    {
        'I44-I49': (
            {'I44': tuple([f'I44.{x}' for x in range(8)])},
            {'I45': ('I45.0', 'I45.1', 'I45.2', 'I45.3', 'I45.4', 'I45.5', 'I45.6', 'I45.8', 'I45.9')},
            {'I46': ('I46.0', 'I46.1', 'I46.9')},
            {'I47': ('I47.0', 'I47.1', 'I47.2', 'I47.9')},
            {'I48': ('I48.0', 'I48.1', 'I48.2', 'I48.3', 'I48.4', 'I48.9')},
            {'I49': ('I49.0', 'I49.1', 'I49.2', 'I49.3', 'I49.4', 'I49.5', 'I49.8', 'I49.9')},
        )
    },
    'Z95.0',
    {'I50': ('I50.0', 'I50.1', 'I50.9')},
    'I65.2',
    {'E78': ('E78.0', 'E78.1', 'E78.2', 'E78.3', 'E78.4', 'E78.5', 'E78.6', 'E78.8', 'E78.9')},
    'R73.0',
    'R73.9',
    {'E11': tuple([f'E11.{x}' for x in range(10)])},
    {'I69.0-I69.4': tuple([f'I69.{x}' for x in range(5)])},
    'I67.8',
    {'K20': tuple([f'K20.{x}' for x in range(10) if x != 8])},
    'K21.0',
    {'K25': tuple([f'K25.{x}' for x in range(10) if x != 8])},
    {'K26': tuple([f'K26.{x}' for x in range(10) if x != 8])},
    'K31.7',
    {'K86': ('K86.0', 'K86.1', 'K86.2', 'K86.3', 'K86.8', 'K86.9')},
    'J41.0',
    'J41.1',
    'J41.8',
    'J44.0',
    'J44.8',
    'J44.9',
    'J47.0',
    'J45.0',
    'J45.1',
    'J45.8',
    'J45.9',
    {'J12': ('J12.0', 'J12.1', 'J12.2', 'J12.3', 'J12.8', 'J12.9')},
    'J13',
    'J14',
    'J84.1',
    'N18.1',
    'N18.9',
    'M81.5',
    'K29.4',
    'K29.5',
    'D12.6',
    'K31.7',
    'D12.8',
    'K62.1',
    {'K50': ('K50.0', 'K50.1', 'K50.8', 'K50.9')},
    {'K51': tuple([f'K51.{x}' for x in range(10) if x not in (6, 7)])},
    'K22.0',
    'K22.2',
    'K22.7',
    'K70.3',
    {'K74.3-K74.6': tuple([f'K74.{x}' for x in range(3, 7)])},
    'D13.4',
    'D37.6',
)


# Приложение 2: Перечень хронических заболеваний, функциональных расстройств,
# иных состояний, при наличии которых устанавливается диспансерное наблюдение
# за взрослым населением врачом-кардиологом
Appendix2 = (
    {
        'I05-I09': (
            {'I05': tuple([f'I05.{x}' for x in range(10) if x not in (3, 4, 5, 6, 7)])},
            {'I06': tuple([f'I06.{x}' for x in range(10) if x not in (3, 4, 5, 6, 7)])},
            {'I07': tuple([f'I07.{x}' for x in range(10) if x not in (3, 4, 5, 6, 7)])},
            {'I08': tuple([f'I07.{x}' for x in range(10) if x not in (4, 5, 6, 7)])},
            {'I09': tuple([f'I09.{x}' for x in range(10) if x not in (3, 4, 5, 6, 7)])},
        )
    },
    {
        'I34-I37': tuple(
            [
                {base: tuple([f'{base}.{x}' for x in range(10) if x not in (3, 4, 5, 6, 7)])} 
                for base in ('I34', 'I35', 'I36', 'I37')
            ]
        )
    },
    {'I51.0-I51.2': ('I51.0', 'I51.1', 'I51.2')},
    {'I71': tuple([f'I71.{x}' for x in range(10) if x != 7])},
    {'Z95.2-Z95.4': ('Z95.2', 'Z95.3', 'Z95.4')},
    'Z95.8',
    'Z95.9',
    {
        'I10-I15': (
            'I10', 
            {'I11': ('I11.0', 'I11.9')},
            {'I12': ('I12.0', 'I12.9')},
            {'I13': ('I13.0', 'I13.1', 'I13.2', 'I13.9')},
            {'I15': ('I15.0', 'I15.1', 'I15.2', 'I15.8', 'I15.9')},
        )
    },
    {
        'I20-I25': (
            {'I20': ('I20.0', 'I20.1', 'I20.8', 'I20.9')},
            {'I21': ('I21.0', 'I21.1', 'I21.2', 'I21.3', 'I21.4', 'I21.9')},
            {'I22': ('I22.0', 'I22.1', 'I22.8', 'I22.9')},
            {'I23': ('I23.0', 'I23.1', 'I23.2', 'I23.3', 'I23.4', 'I23.5', 'I23.6', 'I23.8')},
            {'I24': ('I24.0', 'I24.1', 'I24.8', 'I24.9')},
            {'I25': ('I25.0', 'I25.1', 'I25.2', 'I25.3', 'I25.4', 'I25.5', 'I25.6', 'I25.8', 'I25.9')},
        )
    },
    'Z95.1',
    'Z95.5',
    {'I26': ('I26.0', 'I26.9')},
    'I27.0',
    {'I28': ('I28.0', 'I28.1', 'I28.8', 'I28.9')},
    'I27.2',
    'I27.8',
    {'I33': ('I33.0', 'I33.9')},
    {'I38-I39': ('I38', 'I39.0', 'I39.1', 'I39.2', 'I39.3', 'I39.4', 'I39.8')},
    {'I40': ('I40.0', 'I40.1', 'I40.8', 'I40.9')},
    {'I41': ('I41.0', 'I41.1', 'I41.2', 'I41.8')},
    'I51.4',
    {'I42': tuple([f'I42.{x}' for x in range(10)])},
    {
        'I44-I49': (
            {'I44': tuple([f'I44.{x}' for x in range(8)])},
            {'I45': ('I45.0', 'I45.1', 'I45.2', 'I45.3', 'I45.4', 'I45.5', 'I45.6', 'I45.8', 'I45.9')},
            {'I46': ('I46.0', 'I46.1', 'I46.9')},
            {'I47': ('I47.0', 'I47.1', 'I47.2', 'I47.9')},
            {'I48': ('I48.0', 'I48.1', 'I48.2', 'I48.3', 'I48.4', 'I48.9')},
            {'I49': ('I49.0', 'I49.1', 'I49.2', 'I49.3', 'I49.4', 'I49.5', 'I49.8', 'I49.9')},
        )
    },
    'Z95.0',
    {'I50': ('I50.0', 'I50.1', 'I50.9')},
    'I65.2',
    {'Е78': tuple([f'Е78.{x}' for x in range(10) if x != 7])},
    {
        'Q20-Q28': (
            {'Q20': tuple([f'Q20.{x}' for x in range(10) if x != 7])},
            {'Q21': tuple([f'Q21.{x}' for x in range(10) if x not in (5, 6, 7)])},
            {'Q22': tuple([f'Q22.{x}' for x in range(10) if x != 7])},
            {'Q23': tuple([f'Q23.{x}' for x in range(10) if x not in (5, 6, 7)])},
            {'Q24': tuple([f'Q24.{x}' for x in range(10) if x != 7])},
            {'Q25': tuple([f'Q25.{x}' for x in range(10)])},
            {'Q26': tuple([f'Q26.{x}' for x in range(10) if x != 7])},
            {'Q27': tuple([f'Q27.{x}' for x in range(10) if x not in (5, 6, 7)])},
            {'Q28': tuple([f'Q28.{x}' for x in range(10) if x not in (4, 5, 6, 7)])},
        )
    },
)


# Приложение 3: Перечень хронических заболеваний, функциональных расстройств,
# иных состояний, которые предшествуют развитию злокачественных
# новообразований, при наличии которых устанавливается диспансерное наблюдение
# за взрослым населением врачами-специалистами
Appendix3 = (
    {'B18.0-B18.2': ('B18.0', 'B18.1', 'B18.2')},
    {
        'B20-B24': (
            {'B20': tuple([f'B20.{x}' for x in range(10)])},
            {'B21': tuple([f'B21.{x}' for x in range(10) if x not in (4, 5, 6)])},
            {'B22': ('B18.0', 'B18.1', 'B18.2', 'B18.7')},
        )
    },
    'E34.8',
    'D13.7',
    {'D35.0-D35.2': ('D35.0', 'D35.1', 'D35.2')},
    'D35.8',
    'D44.8',
    'D35.0',
    'D35.1',
    'D35.8',
    'E34.5',
    'E22.0',
    'E04.1',
    'E04.2',
    'E05.1',
    'E05.2',
    'D35.1',
    'E21.0',
    'D35.0',
    'Q85.1',
    {'D11': ('D35.0', 'D35.7', 'D35.9')},
    'Q78.1',
    'D30.3',
    'D30.4',
    'N48.0',
    'D41.0',
    'D30.0',
    'D29.1',
    {'M96': tuple([f'M96.{x}' for x in range(10) if x != 7])},
    {'M88': ('M88.0', 'M88.8', 'M88.9')},
    {'D16': tuple([f'D16.{x}' for x in range(10)])},
    {'M85': tuple([f'M85.{x}' for x in range(10) if x != 7])},
    'Q78.4',
    {'D31': tuple([f'D31.{x}' for x in range(10) if x not in (7, 8)])},
    'D23.1',
    'J38.1',
    'D14.1',
    'D14.2',
    'D14.0',
    {'J33': ('J33.0', 'J33.1', 'J33.8', 'J33.9')},
    {'D14': tuple([f'D14.{x}' for x in range(5)])},
    'D10.4',
    'D10.5',
    'D10.6',
    'D10.7',
    'D10.9',
    {'J37': ('J37.0', 'J37.1')},
    {'J31': ('J31.0', 'J31.1', 'J31.2')},
    'K13.2',
    'K13.0',
    'D10.0',
    'D10.1',
    'D10.2',
    'D10.3',
    'K13.7',
    'Q78.1',
    {'L43': ('L43.0', 'L43.1', 'L43.2', 'L43.3', 'L43.8', 'L43.9')},
    {'D22': tuple([f'D22.{x}' for x in range(10) if x != 8])},
    'Q82.5',
    {'D23': tuple([f'D23.{x}' for x in range(10) if x != 8])},
    'L57.1',
    'L82',
    'Q82.1',
    {'N84': tuple([f'N84.{x}' for x in range(10) if x not in (4, 5, 6, 7)])},
    'E28.2',
    'N88.0',
    'N85.0',
    'N85.1',
    'N87.1',
    'N87.2',
    'D39.1',
    'D24',
    {'N60': tuple([f'N60.{x}' for x in range(10) if x not in (5, 6, 7)])},
)


def get_all_diagnoses() -> Set[str]:
    """Возвращает всё множество диагнозов для приказа 168н"""

    def _extract_diagnoses_from_group(ds_group: Union[str, tuple, dict], data: Set[str]) -> None:
        """Извлекает набор диагнозов из группы."""
        
        if isinstance(ds_group, tuple):
            for item in ds_group:
                if isinstance(item, str):
                    ds.add(item)
                elif isinstance(item, dict):
                    _extract_diagnoses_from_group(tuple(*item.values()), data)
            return

        elif isinstance(ds_group, str):
            ds.add(ds_group)
            return

        elif isinstance(ds_group, dict):
            _extract_diagnoses_from_group(tuple(*ds_group.values()), data)
        
    ds = set()
    for suite in (Appendix1, Appendix2, Appendix3,):
        for ds_group in suite:
            _extract_diagnoses_from_group(ds_group, ds)
    
    return ds

if __name__ == '__main__':
    print(len(get_all_diagnoses()))